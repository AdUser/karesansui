<%doc>Copyright (C) 2009-2010 HDE, Inc.</%doc>
<%inherit file="../include/common.part" />

<%
all_checked = ''
network_checked = ''
ipaddress_checked = ''
if config['access'][0] == 'all':
    all_checked = 'checked="checked"'
elif config['access'][0] == 'network':
    network_checked = 'checked="checked"'
elif config['access'][0] == 'ipaddress':
    ipaddress_checked = 'checked="checked"'
else:
    pass

network = ''
ipaddresses = ''
if config['access'][0] == 'network':
    network = config['access'][1]
elif config['access'][0] == 'ipaddress':
    for ip in config['access'][1:]:
        ip += '\n'
        ipaddresses += ip
else:
    pass

ssl_enable_checked = ''
ssl_disable_checked = ''
if config['ssl_status'] == 'enable':
    ssl_enable_checked = 'checked="checked"'
else:
    ssl_disable_checked = 'checked="checked"'

%>
<script type="text/javascript">
<!--
function validates_server(){
    var check = true;
    ERROR_MSG = "";

    check = check_unique_key(
        $("#server_uniqkey"),
        CHECK_EMPTY | CHECK_VALID,
        "${_('Karesansui Unique Key')}"
    ) && check;

    check = check_number(
        $("#server_port"),
        CHECK_EMPTY  | CHECK_VALID | CHECK_MIN | CHECK_MAX,
        "${_('Port Number')}",
        PORT_MIN_NUMBER,
        PORT_MAX_NUMBER
    ) && check;

    if($(":input[name='access']:checked").val() == 'network'){
        check = check_cidr(
            $("#network_range"),
            CHECK_EMPTY | CHECK_VALID,
            "${_('Permit Access From Same Network')}"
        ) && check;
    }

    if($(":input[name='access']:checked").val() == 'ipaddress'){
        if($("#ipaddress_list").val().length == 0){
            check = false;
            ERROR_MSG += minisprintf("${_('%s is missing.')}" + "\n", "${_('Permit access from specified IP address')}");
        }else{
            var ip_check = true;
            var ip_list = $("#ipaddress_list").val().split('\n');

            for(var idx in ip_list){
                if(ip_list[idx] != ''){
                    ip_check = (is_CIDR(ip_list[idx]) || is_full_ipaddr(ip_list[idx]));
                    check = ip_check && check;
                }
                if(ip_check == false){
                    ERROR_MSG += minisprintf("${_('%s is in invalid format.')}" + "\n", "${_('Permit access from specified IP address')}");
                    break;
                }
            }
        }
    }

    if(!check){
        show_alert_msg("${_('Please input correct value.')}\n" + ERROR_MSG);
    }
    return check;
}

function showswitch_access_policy(policy_type){
    if(policy_type == "all"){
        $("#network_range_contents").hide();
        $("#ipaddress_list_contents").hide();
    }else if(policy_type == "network"){
        $("#network_range_contents").show();
        $("#ipaddress_list_contents").hide();
    }else if(policy_type == "ipaddress"){
        $("#network_range_contents").hide();
        $("#ipaddress_list_contents").show();
    }
}

function showswitch_proxy_setting(proxy_status){
    if(proxy_status == "1"){
        $("#proxy_setting").show();
    }else if(proxy_status == "0"){
        $("#proxy_setting").hide();
    }
}

$(document).ready(function(){
    showswitch_access_policy($(":input[name='access']:checked").val());
    showswitch_proxy_setting($(":input[name='proxy_status']:checked").val());

    ajax_put_event(
        "#server_setting_button",
        "${ctx.homepath}${ctx.path}",
        $("#karesansui_server_setting :input"),
        validates_server
    );

    // help
    helptip("#uniqkey_help",
        "${_('Unique Key')}",
        "${_("A unique ID to distinguish each host when using Karesansui in multi-host configuration. Should be a unique value between all hosts and guests. Format: 5 fields separated by '-'. Each field should have 8-4-4-4-12 letters.")}");

    helptip("#port_number_help",
        "${_('Port Number')}",
        /*
        TRANSLATORS:
        Karesansuiの待ち受けポート番号(HTTP)です。
        */
        "${_("A listen port number for Karesansui web control panel.")}");

    helptip("#access_policy_help",
        "${_('Access Policy')}",
        "${_(r"Access policy for Karesansui control panel. You may allow access from specified IP address or network. To \"Permit access from same network\", specify a network address in CIDR format (ex.192.168.0.0/24). To \"Permit access from specified IP address\", specify IP address separated by newlines. After changing settings, restart lighttpd via .\"Management\" - \"Service\" panel.")}");

    helptip("#ssl_setting_help",
        "${_('SSL Settings')}",
        "${_("Settings to enable/disable SSL for Karesansui control panel.")}");

});

// -->
</script>
<div id="karesansui_server_setting">
    <form action="" method="post" name="server_setting">
        <div class="grayout-head">
            <span class="grayout-title">
                <a href="#" id="server" class="path-a"><img src="${ctx.homepath}/static/images/settings-title.gif" alt="" >${_('Edit Server Settings')}</a>
            </span>
            <br style="clear: both;"/>
        </div>

        <div class="grayout-contents">
            <div class="grayout-param">${_('Unique Key')}<span id="uniqkey_help"/></div>
            <div class="grayout-value grayout-form">
                <p><input type="text" name="uniqkey" value="${config['uniqkey']}" id="server_uniqkey" size="52" maxlength="36" /><span class="require-text">${_('Require')}</span></p>
            </div>

            <div class="grayout-param">${_('Karesansui Port Number')}<span id="port_number_help"/></div>
            <div class="grayout-value grayout-form">
                <input type="text" name="port" value="${config['port']}" id="server_port" size="7" maxlength="5" /><span class="require-text">${_('Require')}</span>
            </div>

            <div class="grayout-param">${_('Access Policy')}<span id="access_policy_help"/></div>
            <div class="grayout-value grayout-form">
                <input type="radio" name="access" value="all" id="server_access" ${all_checked}
                    onClick="showswitch_access_policy('all')" />&nbsp;${_('Permit access from all')}&nbsp;&nbsp;
                <input type="radio" name="access" value="network" id="server_network" ${network_checked}
                    onClick="showswitch_access_policy('network')" />&nbsp;${_('Permit access from same network')}&nbsp;&nbsp;
                <input type="radio" name="access" value="ipaddress" id="server_ipaddress" ${ipaddress_checked}
                    onClick="showswitch_access_policy('ipaddress')" />&nbsp;${_('Permit access from specified IP address')}&nbsp;&nbsp;
                <p><span id="ipaddress_list_contents"><textarea name="access_ipaddress" rows="4" cols="28" id="ipaddress_list" style="vertical-align:middle;">${ipaddresses}</textarea><span class="require-text">${_('Require')}</span></span></p>
                <p><span id="network_range_contents"><input type="text" name="network" value="${network}" id="network_range" size="38" maxlength="18" /><span class="require-text">${_('Require')}</span></span></p>
            </div>

            <div class="grayout-param">${_('SSL Settings')}<span id="ssl_setting_help"/></div>
            <div class="grayout-value grayout-form">
                <input type="radio" name="ssl_status" value="enable" id="ssl_enable" ${ssl_enable_checked} />&nbsp;${_('Use')}&nbsp;&nbsp;
                <input type="radio" name="ssl_status" value="disable" id="ssl_disable" ${ssl_disable_checked} />&nbsp;${_('Not use')}&nbsp;&nbsp;
            </div>

            <div class="grayout-footer">
                <a href="#" name="server_setting_button" id="server_setting_button" class="button">
                    <span class="button-left">&nbsp;</span><span class="button-right">${_('Edit')}</span>
                </a>
                <br style="clear: both;"/>
            </div>
            <br style="clear: both;"/>
        </div>
    </form>
</div>
